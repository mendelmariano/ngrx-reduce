{"ast":null,"code":"import { createReducer, on, createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport * as fromUsuariosAction from \"../usuarios/usuarios.actions\";\nexport const initialState = {\n  usuarios: [],\n  usuario: null,\n  error: ''\n};\n\nconst _usuarioReducer = createReducer(initialState, on(fromUsuariosAction.LoadUsuariosSucess, (state, {\n  payLoad\n}) => Object.assign(Object.assign({}, state), {\n  usuarios: payLoad,\n  error: ''\n})), on(fromUsuariosAction.LoadUsuariosFail, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error\n})), on(fromUsuariosAction.LoadUsuarioSucess, (state, {\n  payLoad\n}) => Object.assign(Object.assign({}, state), {\n  usuario: payLoad,\n  error: ''\n})), on(fromUsuariosAction.LoadUsuarioFail, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error\n})), on(fromUsuariosAction.CreateUsuarioSucess, (state, {\n  payLoad\n}) => Object.assign(Object.assign({}, state), {\n  usuarios: [...state.usuarios, payLoad],\n  error: ''\n})), on(fromUsuariosAction.CreateUsuarioFail, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error\n})), on(fromUsuariosAction.UpdateUsuarioSucess, (state, {\n  payLoad\n}) => Object.assign(Object.assign({}, state), {\n  usuarios: [...state.usuarios].map(row => {\n    if (row.id === payLoad.id) {\n      return payLoad;\n    } else {\n      return row;\n    }\n  }),\n  error: ''\n})), on(fromUsuariosAction.CreateUsuarioFail, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error\n})), on(fromUsuariosAction.DeleteUsuarioSucess, (state, {\n  payLoad\n}) => Object.assign(Object.assign({}, state), {\n  usuarios: [...state.usuarios].filter(filter => {\n    filter.id != payLoad.id;\n  }),\n  error: ''\n})), on(fromUsuariosAction.CreateUsuarioFail, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error\n})));\n\nexport function usuarioReducer(state = initialState, action) {\n  return _usuarioReducer(state, action);\n}\nconst getUsuariosFeatureState = createFeatureSelector('usuarios');\nexport const getUsuarios = createSelector(getUsuariosFeatureState, state => state.usuarios);\nexport const getUsuario = createSelector(getUsuariosFeatureState, state => state.usuario);\nexport const getUsuarioErro = createSelector(getUsuariosFeatureState, state => state.error);\nexport const getUsuariosAdmin = createSelector(getUsuariosFeatureState, state => state.usuarios.filter(filter => filter.perfil === 'Administrador'));","map":null,"metadata":{},"sourceType":"module"}